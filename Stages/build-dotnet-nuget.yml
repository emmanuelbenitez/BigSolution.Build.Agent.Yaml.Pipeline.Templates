#region Copyright & License

# Copyright © 2020 - 2021 Emmanuel Benitez

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at

# http://www.apache.org/licenses/LICENSE-2.0

# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#endregion

parameters:
  - name: ProjectOrSolutionPath
    type: string
  - name: Major
    type: number
  - name: Minor
    type: number
  - name: Patch
    type: number
  - name: PreRelease
    type: string
  - name: GenerateBuildNumber
    type: boolean
  - name: Configuration
    type: string
    values:
      - Debug
      - Release
  - name: SkipTest
    type: boolean
  - name: SkipBuildArtifactPublication
    type: boolean

stages:
  - stage: build
    displayName: "Build stage"
    variables:
      - ${{ if ne(parameters.PreRelease , '') }}:
          - name: version.prerelease
            value: $[ format('{0}-{1:0000}', '${{parameters.PreRelease}}', counter('${{format('{0}.{1}.{2}-{3}', parameters.Major, parameters.Minor, parameters.Patch, parameters.PreRelease)}}', 1)) ]
    jobs:
      - ${{ if eq(parameters.GenerateBuildNumber, true) }}:
          - job: prepare
            displayName: "Prepare"
            steps:
              - checkout: none

              - template: /Steps/generate-build-number.yml
                parameters:
                  Major: ${{ parameters.Major }}
                  Minor: ${{ parameters.Minor }}
                  Patch: ${{ parameters.Patch }}
      - job: build
        displayName: "Compile, test, and pack"
        pool:
          vmImage: "windows-latest"
        ${{ if eq( parameters.GenerateBuildNumber, true) }}:
          dependsOn: prepare
          condition: succeeded()
        steps:
          - checkout: self
            submodules: true

          - template: /Steps/download-private-signing-key.yml

          - template: /Steps/dotnet-restore.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}

          - template: /Steps/dotnet-build.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
              Configuration: ${{ parameters.Configuration }}
              Major: ${{ parameters.Major }}
              Minor: ${{ parameters.Minor }}
              Patch: ${{ parameters.Patch }}
              PrivateSigningKeyPath: "$(privateSigningKey.secureFilePath)"
              ${{ if ne(parameters.PreRelease , '') }}:
                VersionSuffix: $(version.prerelease)
              ${{ if eq(parameters.PreRelease , '') }}:
                VersionSuffix: ""

          - ${{ if eq(parameters.SkipTest, false) }}:
              - template: /Steps/dotnet-test.yml
                parameters:
                  ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
                  Configuration: ${{ parameters.Configuration }}

          - ${{ if eq(parameters.SkipBuildArtifactPublication, false) }}:
              - template: /Steps/dotnet-pack.yml
                parameters:
                  Configuration: ${{ parameters.Configuration }}
                  OutputPath: "$(Build.ArtifactStagingDirectory)/packages"

              - template: /Steps/publish-build-artifact.yml
                parameters:
                  ArtifactName: "nugetPackages"
                  PathToPublish: "$(Build.ArtifactStagingDirectory)/packages"
      - job: analyzeCode
        displayName: "Analyze code"
        ${{ if eq( parameters.GenerateBuildNumber, true) }}:
          dependsOn: prepare
          condition: succeeded()
        pool:
          vmImage: "windows-latest"
        steps:
          - checkout: self
            submodules: true
          - template: /Steps/dotnet-restore.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
          - template: /Steps/analyze-code-with-resharper.yml
            parameters:
              ProjectOrSolutionPath: ${{ parameters.ProjectOrSolutionPath }}
              Configuration: ${{ parameters.Configuration }}
